///////////////////////////////////////////////////////////
//  Location.cs
//  Implementation of the Class Location
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2014 10:13:37 PM
//  Original author: Gsimmons
///////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Text;
using Mazegame.Entity.Utility;

namespace Mazegame.Entity
{
    public class Location
    {
        private Hashtable exits;
        private String description;
        private String label;
        private Inventory items;
        private NonPlayerCharacterCollection characterList;
        public Location()
        {
            items = new Inventory();
            characterList = new NonPlayerCharacterCollection();
        }

        public Location(String description, String label)
        {
            Description = description;
            Label = label;
            exits = new Hashtable();
            items = new Inventory();
            characterList = new NonPlayerCharacterCollection();
        }
        public Exit GetRandomExit()
        {
            Random random = new Random();
            int r = random.Next(exits.Count);
            int i = 0;
            foreach(Exit exit in exits.Values) {
                if (i == r)
                {
                    return exit;
                }
                i++;
            }
            return null;
        }

        public NonPlayerCharacterCollection GetNonPlayerCharacterCollection()
        {
            return characterList;
        }

        public Inventory GetInventory()
        {
            return this.items;
        }

        public Boolean AddExit(String exitLabel, Exit theExit)
        {
            if (exits.ContainsKey(exitLabel))
                return false;
            exits.Add(exitLabel, theExit);
            return true;
        }

        public Exit GetExit(String exitLabel)
        {
            return (Exit)exits[exitLabel];
        }

        public String Description
        {
            get { return description; }
            set { description = value; }
        }

        public String Label
        {
            get { return label; }
            set { label = value; }
        }

        public String AvailableExits()
        {
            StringBuilder returnMsg = new StringBuilder();
            foreach (string label in this.exits.Keys)
            {
                returnMsg.Append("[" + label + "] ");
            }
            return returnMsg.ToString();
        }

        public bool ContainsExit(String exitLabel)
        {
            return exits.Contains(exitLabel);
        }

        public override string ToString()
        {
            return "**********\n" + this.Label + "\n**********\n"
                + "Exits found :: " + AvailableExits() + "\n**********\n"
                + "Items found :: " + items.ToString() + "\n**********\n"
                + this.Description + "\n**********\n";
        }
    }
}
//end namespace Entity